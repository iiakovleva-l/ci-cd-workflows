name: Run Flask App

on:
  push:
    branches:
      - main

jobs:
  run-flask-app:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verify Flask installation
      run: |
        source venv/bin/activate
        flask --version

    - name: Log network configuration
      run: |
        ip addr
        netstat -tuln

    - name: Run Flask app
      env:
        FLASK_APP: hello.py
        FLASK_ENV: development
      run: |
        source venv/bin/activate
        flask run --host=0.0.0.0 --port=5000 &
        sleep 30
        if [ -f flask.log ]; then cat flask.log; else echo "flask.log not found"; fi
        netstat -tuln

    - name: Remove old ngrok
      run: |
        sudo rm -f /usr/local/bin/ngrok

    - name: Download ngrok
      run: |
        wget -q https://dl.ngrok.com/ngrok-v3-stable-linux-amd64.tgz -O ngrok.tgz || { echo 'ngrok download failed'; exit 1; }

    - name: Extract and Install ngrok
      run: |
        sudo tar xvzf ngrok.tgz -C /usr/local/bin || { echo 'ngrok extraction failed'; exit 1; }
        sudo chmod +x /usr/local/bin/ngrok

    - name: Display ngrok version
      run: /usr/local/bin/ngrok version

    - name: Configure ngrok with authtoken
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        /usr/local/bin/ngrok authtoken $NGROK_AUTH_TOKEN

    - name: Run ngrok
      run: |
        /usr/local/bin/ngrok http 5000 &
        sleep 10
        curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'

    - name: Test Flask app
      run: |
        curl --retry 10 --retry-delay 5 --retry-connrefused http://localhost:5000

    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: flask-logs
        path: flask.log
