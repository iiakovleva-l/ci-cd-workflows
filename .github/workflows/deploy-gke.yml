name: Deploy to GKE

on:
  workflow_run:
    workflows: ["Build Docker and Push to GHCR"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Add Google Cloud SDK distribution URI as a package source
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -

      - name: Install gke-gcloud-auth-plugin
        run: |
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Get the latest image digest
        id: image-digest
        run: |
          DIGEST=$(curl -s -H "Authorization: Bearer ${{ secrets.GHCR_PAT }}" "https://ghcr.io/v2/${{ github.repository }}/manifests/latest" | jq -r '.config.digest')
          if [ "$DIGEST" == "null" ] || [ -z "$DIGEST" ]; then
            echo "Failed to retrieve image digest"
            exit 1
          fi
          echo "Retrieved digest: ${DIGEST}"
          echo "digest=${DIGEST}" >> $GITHUB_ENV

      - name: Debug image digest
        run: echo "Image digest is ${{ env.digest }}"

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }}

      - name: Update deployment image
        run: |
          kubectl set image deployment/flask-app flask-app=ghcr.io/${{ github.repository }}@${{ env.digest }}

      - name: Verify deployment rollout
        run: |
          kubectl rollout status deployment/flask-app
